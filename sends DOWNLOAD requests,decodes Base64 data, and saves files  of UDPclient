def download_file(sock, hostname, port, filename):
    """Download a single file from the server."""
    server_address = (hostname, port)
    # Send DOWNLOAD request
    message = f"DOWNLOAD {filename}"
    try:
        response = send_and_receive(sock, message, server_address)
        parts = response.split()
        if parts[0] == "ERR":
            print(f"Error: File {filename} not found")
            return False
        if parts[0] != "OK":
            print(f"Unexpected response: {response}")
            return False

        file_size = int(parts[3])
        data_port = int(parts[5])
        data_address = (hostname, data_port)
        print(f"Downloading {filename} ({file_size} bytes)")

        # Create file for writing
        with open(filename, 'wb') as f:
            bytes_received = 0
            while bytes_received < file_size:
                start = bytes_received
                end = min(bytes_received + 999, file_size - 1)
                message = f"FILE {filename} GET START {start} END {end}"
                response = send_and_receive(sock, message, data_address)
                parts = response.split()
                if parts[0] != "FILE" or parts[2] != "OK":
                    print(f"Invalid data response: {response}")
                    return False

                # Extract and decode data
                data_start = response.index("DATA") + 5
                base64_data = response[data_start:].strip()
                data = base64.b64decode(base64_data)
                f.seek(start)
                f.write(data)
                bytes_received += len(data)
                print("*", end="", flush=True)

        # Send CLOSE message
        message = f"FILE {filename} CLOSE"
        response = send_and_receive(sock, message, data_address)
        if response != f"FILE {filename} CLOSE_OK":
            print(f"Invalid close response: {response}")
            return False
        print(f"\nDownloaded {filename}")
        return True
    except Exception as e:
        print(f"Error downloading {filename}: {e}")
        return False
